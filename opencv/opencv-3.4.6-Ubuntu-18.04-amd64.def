Bootstrap: docker
From: ubuntu:18.04

%environment
    export LC_ALL=C

    export OPENCV_VERSION=3.4.6

    export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
    export LD_LIBRARY_PATH=/usr/local/opencv/$OPENCV_VERSION/lib:$LD_LIBRARY_PATH

    export PYTHONPATH=/usr/local/opencv/$OPENCV_VERSION/lib/python3.6/dist-packages/:${PYTHONPATH}
    export PYTHONPATH=/usr/local/lib/python3.6/dist-packages/:${PYTHONPATH}

    export PKG_CONFIG_PATH=/usr/local/opencv/$OPENCV_VERSION/lib/pkgconfig

    # Jupyter Notebook /run/user/1000/
    # Permission issue for /run/user/0/jupyter when I execute Jupyter Notebook
    # See https://groups.google.com/forum/#!topic/jupyter/uQ8Jqz4rnu0
    unset XDG_RUNTIME_DIR

%labels
    Maintainer "Patrice Dion"
    Maintainer "Pierre-Luc Delisle" <github@pierre-luc-delisle.com>
    Architecture x86_64
    Version v1.0.4

%post
    # Set noninteractive installation
    export DEBIAN_FRONTEND=noninteractive

    # Export versions and paths
    export OPENCV_VERSION=3.4.6
    export OPENCV_DIR="/usr/local/opencv/${OPENCV_VERSION}"

    # Install tzdata package
    apt-get update > /dev/null 2>&1
    apt-get -y upgrade > /dev/null 2>&1
    apt-get install -y tzdata > /dev/null 2>&1
    # Set timezone
    ln -fs /usr/share/zoneinfo/America/Montreal /etc/localtime
    dpkg-reconfigure --frontend noninteractive tzdata

    apt-get install -y software-properties-common > /dev/null 2>&1
    add-apt-repository universe
    # For libjasper for OpenCV.
    add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"

    # OpenCV 3.4.x
    # See : https://gist.github.com/raulqf/a3caa97db3f8760af33266a1475d0e5e

    export DPKG_DEPEND="ca-certificates \
      wget \
      curl \
      build-essential \
      apt-utils \
      cmake \
      git \
      unzip \
      yasm \
      flake8 \
      gfortran \
      checkinstall \
      python3-dev \
      python3-pip \
      python3-tk \
      python3-numpy \
      python3-flake8 \
      pylint3 \
      pkg-config \
      freeglut3-dev \
      clang \
      htop \
      libx11-dev \
      libxmu-dev \
      libxi-dev \
      libgl1-mesa-glx \
      libglu1-mesa \
      libglu1-mesa-dev \
      libglfw3-dev \
      libgles2-mesa-dev \
      libgtk-3-dev \
      libjpeg8-dev \
      libtiff5-dev \
      libpng-dev \
      libgstreamer1.0-dev \
      libgstreamer-plugins-base1.0-dev \
      x264 \
      libx264-dev \
      libfaac-dev \
      libmp3lame-dev \
      libtheora-dev \
      libvorbis-dev \
      libgtk2.0-dev \
      libavcodec-dev \
      libavformat-dev \
      libswscale-dev \
      g++ \
      graphviz \
      libtbb2 \
      libtbb-dev \
      libjpeg-dev \
      libpng-dev \
      libtiff-dev \
      libgtk-3-dev \
      libatlas-base-dev \
      openblas-* \
      libopenblas-dev \
      ocl-icd-opencl-dev \
      libcupti-dev \
      libgtkglext1-dev \
      libgtkglext1 \
      freeglut3-dev \
      libgl1-mesa-dev \
      mesa-common-dev \
      libprotobuf-dev \
      protobuf-compiler \
      libleveldb-dev \
      libhdf5-serial-dev \
      libboost-dev \
      libboost-all-dev \
      libopencore-amrnb-dev \
      libopencore-amrwb-dev \
      libxvidcore-dev \
      liblapacke-dev \
      libopenni2-dev \
      libgflags-dev \
      libgoogle-glog-dev \
      liblmdb-dev \
      libgphoto2-dev \
      libeigen3-dev \
      libhdf5-dev \
      libgdal-dev \
      v4l-utils \
      libv4l-dev \
      libxine2-dev \
      libdc1394-22 \
      libdc1394-22-dev \
      libopencv-dev \
      qt5-default \
      libfontconfig1 \
      libjasper1 \
      libjasper-dev \
      doxygen"


    for i in ${DPKG_DEPEND}; do apt-get --assume-yes --allow-change-held-packages --no-install-recommends install $i  > /dev/null 2>&1; done

    # For Pycharm 2019.1.1, add missing libs for Jupyter Notebook rendering through container.
    apt-get -y install libxslt1.1 > /dev/null 2>&1
    apt-get -y install libcanberra-gtk-module libcanberra-gtk3-module > /dev/null 2>&1

    # Install gcc-7
    apt-get -y install gcc-7 g++-7 > /dev/null 2>&1

    # Install Numpy for OpenCV compilation.
    pip3 --no-cache-dir install numpy>=1.16.2

    mkdir /Downloads && cd "$_"
    cd /Downloads
    git clone https://github.com/opencv/opencv.git
    cd opencv
    git checkout ${OPENCV_VERSION}
    cd ..

    git clone https://github.com/opencv/opencv_contrib.git
    cd opencv_contrib
    git checkout ${OPENCV_VERSION}
    cd ..

    git clone https://github.com/opencv/opencv_extra.git
    cd opencv_extra
    git checkout ${OPENCV_VERSION}
    cd ..

    cd opencv
    mkdir build
    cd build

    cmake \
      -D CMAKE_BUILD_TYPE=RELEASE \
      -D BUILD_PYTHON_SUPPORT=ON \
      -D CMAKE_INSTALL_PREFIX=/usr/local/opencv/${OPENCV_VERSION} \
      -D INSTALL_PYTHON_EXAMPLES=ON \
      -D BUILD_PYTHON_SUPPORT=ON \
      -D BUILD_NEW_PYTHON_SUPPORT=ON \
      -D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
      -D PYTHON_INCLUDE_DIR=/usr/include/python3.6 \
      -D PYTHON_INCLUDE_DIR2=/usr/include/x86_64-linux-gnu/python3.6m \
      -D PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so \
      -D PYTHON3_NUMPY_INCLUDE_DIRS=/usr/lib/python3/dist-packages/numpy/core/include/ \
      -D OPENCV_TEST_DATA_PATH=/Downloads/opencv_extra/testdata\
      -D WITH_TBB=ON \
      -D WITH_PTHREADS_PF=ON \
      -D WITH_OPENNI=OFF \
      -D WITH_OPENNI2=ON \
      -D WITH_EIGEN=ON \
      -D BUILD_DOCS=ON \
      -D BUILD_TESTS=ON \
      -D BUILD_PERF_TESTS=ON \
      -D BUILD_EXAMPLES=ON \
      -D WITH_OPENCL=ON \
      -D USE_GStreamer=ON \
      -D WITH_GDAL=ON \
      -D WITH_CSTRIPES=ON \
      -D ENABLE_FAST_MATH=1 \
      -D WITH_OPENGL=ON \
      -D WITH_QT=ON \
      -D WITH_IPP=ON \
      -D WITH_V4L=ON \
      -D WITH_LIBV4L=ON \
      -D WITH_FFMPEG=0 \
      -D WITH_XINE=ON \
      -D WITH_GSTREAMER=OFF \
      -D CPU_BASELINE=SSE2 \
      -D CPU_BASELINE=AVX \
      -D CPU_DISPATCH=SSE4_2,AVX \
      -D CPU_DISPATCH=AVX \
      -D CPU_DISPATCH=AVX,AVX2 ..

    make -j 4

    make install

    # Install libraries
    pip3 --no-cache-dir install virtualenv>=16.6.0
    pip3 --no-cache-dir install joblib>=0.13.2
    pip3 --no-cache-dir install pytest>=4.5.0
    pip3 --no-cache-dir install graphviz>=0.10.1      # Visualisation
    pip3 --no-cache-dir install matplotlib>=3.1.0     # Visualisation
    pip3 --no-cache-dir install seaborn>=0.9.0        # Visualisation
    pip3 --no-cache-dir install bokeh>=1.1.0          # Visualisation
    pip3 --no-cache-dir install pandas>=0.24.2        # Data analysis
    pip3 --no-cache-dir install jupyter

    # Installation of QT4 for Jupyter (dependency)
    apt-get install -y python3-pyqt4

    # See http://docs.dask.org/en/latest/install.html
    pip3 --no-cache-dir install "dask[complete]"     # Parallel

    pip3 --no-cache-dir install ipython>=7.5
    pip3 --no-cache-dir install scikit-image>=0.15.0
    pip3 --no-cache-dir install scikit-learn>=0.21.1

%test
    # List all available python modules
    python3 -c 'help('modules')'
    python3 -c 'import cv2 ; print(cv2.__version__)'

    # Check if the package is installed
    pkg-config opencv --cflags
    pkg-config opencv --libs

    # Test the installation
    export OPENCV_TEST_DATA_PATH=/Downloads/opencv_extra/testdata
    cd /Downloads/opencv/build/bin
    ./opencv_test-core
    ls -al *test*

%runscript
    # https://singularity.lbl.gov/docs-run
    # exec "$@"
    exec /usr/bin/python3 "$@"

EOF
